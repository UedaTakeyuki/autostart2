#!/bin/bash

################################################################
# 
# Autostart setting
# 
# usage: ./autostart.sh --on/--off [target path]
#
#
# @author Dr. Takeyuki UEDA
# @copyright CopyrightÂ© Atelier UEDA 2018 - All rights reserved.
# @repository https://github.com/UedaTakeyuki/autostart2
#
VERSION=1.1.1

################################################################
#
# Parse command line option
#
################################################################
while getopts ":-:" OPT
do
  case $OPT in
    -)
				case "${OPTARG}" in
					on)
								command=on
								;;
					off)
								command=off
								;;
					status)
								command=status
								;;
					version)
								command=version
								;;
					write)
								command=write
								;;
					update)
								command=update
								;;
					delete)
								command=delete
								;;
				esac
				;;
    \?) command=usage_exit
        ;;
  esac
done

# get non option parameter
shift `expr "${OPTIND}" - 1`

if [ $# -eq 0 ]; then
  # TARGET_DIR=$(cd $(dirname $0); pwd) # Path where the script file is in.
  TARGET_DIR=$(pwd)
else
  TARGET_DIR=$(realpath $1)
fi

CMD=$(basename -z $TARGET_DIR | sed 's/\x0//g')
UNITFILE=${TARGET_DIR}/${CMD}.service

################################################################
#
# functions for makeunitfile
#
################################################################
# default [Unit] section
set_default_unit(){
  Description="Simple Unit file for "${CMD}"."
  After=rc-local.service
}
write_unit(){
  echo [Unit] #> $UNITFILE
  echo Description=${Description} #>> $UNITFILE
  echo After=${After} #>> $UNITFILE
  echo #>> $UNITFILE
}

# default [Service] section
set_default_service(){
  WorkingDirectory=${TARGET_DIR}
  ExecStart=${TARGET_DIR}/${CMD}
  Restart=always
  RestartSec=30
  Type=simple
  PIDFile=/var/run/${CMD}.pid
}
write_service(){
  echo [Service] #>> $UNITFILE
  echo WorkingDirectory=${WorkingDirectory} #>> $UNITFILE
  echo ExecStart=${ExecStart} #>> $UNITFILE
  echo Restart=${Restart} #>> $UNITFILE
  echo RestartSec=${RestartSec} #>> $UNITFILE
  echo Type=${Type} #>> $UNITFILE
  echo PIDFile=${PIDFile} #>> $UNITFILE
  echo #>> $UNITFILE
}

# default [Install] section
set_default_install(){
  WantedBy=multi-user.target
}
write_install(){
  echo [Install] #>> $UNITFILE
  echo WantedBy=${WantedBy} #>> $UNITFILE
}

# make unit file
makeunitfile(){
  # set defaults
  set_default_unit
  set_default_service
  set_default_install

  # replace default
  if [ -e ${TARGET_DIR}/replaceoptions.sh ]; then
    source ${TARGET_DIR}/replaceoptions.sh
  fi

  # write sections
  write_unit
  if [ -e ${TARGET_DIR}/add_to_unit_section.sh ]; then
    ${TARGET_DIR}/add_to_unit_section.sh #>> $UNITFILE
  fi
  write_service
  if [ -e ${TARGET_DIR}/add_to_service_section.sh ]; then
    ${TARGET_DIR}/add_to_service_section.sh #>> $UNITFILE
  fi
  write_install
  if [ -e ${TARGET_DIR}/add_to_install_section.sh ]; then
    ${TARGET_DIR}/set_default_install.sh #>> $UNITFILE
  fi
}

################################################################
#
# functions for autostart
#
################################################################
version() {
  echo "Version: " ${VERSION} 1>&2
}

usage_exit(){
  echo "Usage: $0 [option] [Target path(current path if ommited)]" 1>&2
  echo "# service handle options " 1>&2
  echo "  [--on]:               Set autostart as ON. " 			1>&2
  echo "  [--off]:              Set autostart as OFF. " 		1>&2
  echo "  [--status]:           Show current status. " 		 	1>&2
  echo "# unit file options " 1>&2
  echo "  [--write]:            Only write Unit file if not Exist. " 		1>&2
  echo "  [--update]:           Update Unit file if Exist, or create if not. " 		1>&2
  echo "  [--delete]:           Delete Unit file if Exist. " 		1>&2
  echo "# other options " 1>&2
  echo "  [--version]:          Show version. " 		 	      1>&2
  exit 1
}

update(){
  makeunitfile > $UNITFILE
}

write(){
  # create systemctl unit file if not exist
  if [ ! -f ${UNITFILE} ]; then
    update
  fi
}

delete(){
  if [ -f ${UNITFILE} ]; then
    unlink ${UNITFILE}
  fi
}

on(){
  write
  sudo ln -s ${TARGET_DIR}\/${CMD}.service /etc/systemd/system/${CMD}.service
  sudo systemctl daemon-reload
  sudo systemctl enable ${CMD}.service
  sudo systemctl start ${CMD}.service
}

off(){
  sudo systemctl stop ${CMD}.service
  sudo systemctl disable ${CMD}.service
}

status(){
  sudo systemctl status ${CMD}.service
}

# Execute command
case ${command} in
  on)
      on
      exit 1
      ;;
  off)
      off
      exit 1
      ;;
  status)
      status
      exit 1
      ;;
  version)
      version
      exit 1
      ;;
  write)
      write
      exit 1
      ;;
  update)
      update
      exit 1
      ;;
  delete)
      delete
      exit 1
      ;;
  usage_exit)
      usage_exit
      exit 1
      ;;
esac
